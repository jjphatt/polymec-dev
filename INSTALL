------------------------------------------------------------------------------
                               p  o  l  y  m  e  c 
------------------------------------------------------------------------------

---------------------
Software Requirements
---------------------

The polymec library requires the following software for installation:

  - A C compiler that adheres to (or aspires to) the C11 standard. 
    Currently, GCC 4.8 and Clang 3.4 are quite usable (though others
    may work as well).
  - On Linux, a Fortran compiler is required to link against LAPACK/BLAS.
  - A working set of LAPACK/BLAS libraries.
  - CMake 3.1.0+ (found at http://www.cmake.org)
  - GNU Make

--------
Building 
--------

To build polymec on a UNIX-like system, use the following commands:

     $ make config [options]
     $ make [options]

Available options are:

    prefix=/path/to/install <-- Installation prefix

    verbose=0,1 <-- selects a silent or verbose CMake/Make build.

    precision=single,double <-- selects single or double precision.

    mpi=0,1  <-- specifies a serial or MPI build

    debug=0,1  <-- specifies a Release or Debug build

    shared=0,1  <-- specifies static or shared libraries

    machine=xyz <-- specifies the use of a specific machine. Check the 
                    downloaded machines/ directory after using this option 
                    to look for a file for your specific machine. These 
                    files are maintained in the polymec/polymec-machines 
                    repo on GitHub.

    Compilers can also be selected with CC, CXX, FC.

------------
Installation
------------

To install polymec, run

    $ make install

There is no default installation prefix, so you must specify one with the 
prefix=[path] argument to make config. For example:

    $ make config prefix=~/myroot/

-------------------
Other make commands
-------------------

   $ make test 
          Runs all unit tests for the library.

   $ make uninstall 
          Removes all files installed by 'make install'.
   
   $ make clean 
          Removes all object files but retains the configuration options.
   
   $ make distclean 
          Performs clean and completely removes the build directory.

