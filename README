Jeffrey N. Johnson
January 15, 2013

Polymec (pronounced "polimec") is a set of libraries that can be used to
construct models for linear and nonlinear physical systems. Specifically, 
Polymec is designed with the goal of solving nonlinear partial differential 
equations on arbitrary polyhedral grids such as 3D Voronoi tessellations.
My areas of research in the development so far are:

- High-quality, centroid Voronoi grid generation
- More sophisticated forms of time integration
  - Stiffly-accurate fully-implicit integrators
  - Stiffly-accurate, A-stable semi-implicit integrators such as 
    Additive Runge-Kutta (ARK) methods
- Multi-species and multi-phase hydrodynamics with diffusion

--------------------------------
Current state (as of 1/15/2013):
--------------------------------

There are several unfinished areas of development that should be tied up 
before further development is considered:

- core/ <-- The Krylov sparse linear solvers (GMRES, BiCGStab) need to be 
            completed and tested with unit tests. I have started assembling 
            a unit test that solves Laplace's equation with each of these.
            Once these have been demonstrated to perform well (compared to,
            say, PETSc), PETSc can be expunged from the code base. (It is 
            currently used in the Advection-Diffusion solver.)

- geometry/ <-- The creation of bounded Voronoi meshes given an appropriate 
                set of interior and boundary generators needs to be tested.
                Also, the "force-balance" method of initializing sets of 
                quasi-centroidal generators (inspired by Olof-Perrson) has to 
                be completed and tested. With this done, the serial portion of
                Voronoi grid generation will be in good shape.

- integrators/ <-- The linear backward Euler integrator needs to be finished 
                   and tested on the heat equation. The nonlinear BDF 
                   integrator should be implemented and run through the tests 
                   outlined in Zhong's 1996 paper. The explicit RK integrators 
                   need to be tested. Then the ARKN integrators can use these 
                   explicit and implicit integrators as building blocks. These
                   ARKN integrators can be run through the suite of tests 
                   described in Kennedy and Carpenter (2001).

