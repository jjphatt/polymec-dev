sudo: required

services:
  - docker

language: c

env:
  matrix:
    - DEBUG=0 MPI=0 SHARED=0 PRECISION=double 
    - DEBUG=0 MPI=0 SHARED=0 PRECISION=single
    - DEBUG=0 MPI=0 SHARED=1 PRECISION=double
    - DEBUG=0 MPI=1 SHARED=0 PRECISION=double
    - DEBUG=0 MPI=1 SHARED=0 PRECISION=single
    - DEBUG=0 MPI=1 SHARED=1 PRECISION=double
    - DEBUG=1 MPI=0 SHARED=0 PRECISION=double
    - DEBUG=1 MPI=0 SHARED=0 PRECISION=single
    - DEBUG=1 MPI=0 SHARED=1 PRECISION=double
    - DEBUG=1 MPI=1 SHARED=0 PRECISION=double
    - DEBUG=1 MPI=1 SHARED=0 PRECISION=single
    - DEBUG=1 MPI=1 SHARED=1 PRECISION=double

before_install:
  - docker run -d --name polymec-build -v $PWD:/travis ubuntu:xenial tail -f /dev/null
  - docker ps

install:
  - docker exec -t polymec-build bash -c "apt-get update;
    apt-get install -y openmpi-bin libopenmpi-dev g++ liblapack-dev cmake autotools-dev valgrind python"

before_script:
  - docker exec -t polymec-build bash -c "cd travis;
    make config CC=$CC debug=$DEBUG mpi=$MPI shared=$SHARED precision=$PRECISION travis=1 prefix=$HOME/polymec-$TRAVIS_OS_NAME-$CC-debug=$DEBUG-mpi=$MPI-shared=$SHARED-precision=$PRECISION"

script: 
  - if [ "$DEBUG" = "1" ] && [ "$SHARED" = "0" ]; then export TEST=memcheck; else export TEST=test; fi
  - docker exec -t polymec-build bash -c "cd travis;
    make -j4 CC=$CC debug=$DEBUG mpi=$MPI shared=$SHARED precision=$PRECISION install;
    make CC=$CC debug=$DEBUG mpi=$MPI shared=$SHARED precision=$PRECISION $TEST"

#after_success: 
#  - cd $HOME
#  - mkdir -p latest
#  - tar czvf polymec-$TRAVIS_OS_NAME-$CC-debug=$DEBUG-mpi=$MPI-shared=$SHARED-precision=$PRECISION.tar.gz polymec-$TRAVIS_OS_NAME-$CC-debug=$DEBUG-mpi=$MPI-shared=$SHARED-precision=$PRECISION/*
#  - mv polymec-$TRAVIS_OS_NAME-$CC-debug=$DEBUG-mpi=$MPI-shared=$SHARED-precision=$PRECISION.tar.gz latest

after_failure: 
  - docker exec -t polymec-build bash -c "cd travis;
    cat build/*/Testing/Temporary/LastTest.log || cat build/*/Testing/Temporary/LastDynamicAnalysis*;
    cat build/*/Testing/Temporary/MemoryChecker*.log"

after_script:
  - docker exec -t polymec-build bash -c "cd travis;
    cat build/*/3rdparty/*error*.log"

#deploy:
#  provider: s3
#  access_key_id: $S3_ACCESS_KEY_ID
#  secret_access_key: $S3_SECRET_KEY
#  bucket: polymec-dev.travis-ci
#  region: us-west-2
#  skip_cleanup: true
#  local_dir: $HOME/latest
#  upload-dir: polymec-dev
#  acl: public_read

