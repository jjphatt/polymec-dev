include(add_polymec_test)

add_polymec_test(test_polymec_init test_polymec_init.c)
add_polymec_test(test_high_level_headers test_high_level_headers.c)
add_polymec_test(test_string_utils test_string_utils.c)
add_polymec_test(test_tensor2 test_tensor2.c)
add_polymec_test(test_file_utils test_file_utils.c)
add_polymec_test(test_tuple test_tuple.c)
add_polymec_test(test_declare_nd_array test_declare_nd_array.c)
add_polymec_test(test_avl_tree test_avl_tree.c)
add_polymec_test(test_ordered_set test_ordered_set.c)
add_polymec_test(test_ordered_map test_ordered_map.c)
add_polymec_test(test_unordered_map test_unordered_map.c)
add_polymec_test(test_unordered_set test_unordered_set.c)
add_polymec_test(test_table test_table.c)
add_polymec_test(test_text_buffer test_text_buffer.c)
add_polymec_test(test_lookup1 test_lookup1.c)
add_polymec_test(test_options test_options.c)
add_polymec_test(test_kd_tree test_kd_tree.c)
add_polymec_test(test_hilbert test_hilbert.c)
add_polymec_test(test_adj_graph test_adj_graph.c)
add_polymec_test(test_newton test_newton.c)
add_polymec_test(test_special_functions test_special_functions.c)
add_polymec_test(test_mesh test_mesh.c ../../geometry/create_uniform_mesh.c ../../geometry/create_rectilinear_mesh.c ../../geometry/cubic_lattice.c)
add_polymec_test(test_polynomial test_polynomial.c)
add_polymec_test(test_least_squares test_least_squares.c)
add_polymec_test(test_cxx_program test_cxx_program.cpp)

add_mpi_polymec_test(test_parallel_kd_tree test_kd_tree.c 1 2 3 4)
add_mpi_polymec_test(test_exchanger test_exchanger.c 1 2 3 4)
add_mpi_polymec_test(test_migrator test_migrator.c 1 2 3 4)
add_mpi_polymec_test(test_mesh_node_exchangers test_mesh_node_exchangers.c ../../geometry/create_uniform_mesh.c ../../geometry/create_rectilinear_mesh.c ../../geometry/cubic_lattice.c 1 2 3 4)
add_mpi_polymec_test(test_partition_mesh test_partition_mesh.c ../../geometry/create_uniform_mesh.c ../../geometry/create_rectilinear_mesh.c ../../geometry/cubic_lattice.c 1 2 3 4)
add_mpi_polymec_test(test_partition_point_cloud test_partition_point_cloud.c ../../geometry/create_point_lattice.c ../../geometry/cubic_lattice.c 1 2 3 4)
add_mpi_polymec_test(test_parallel_sort test_parallel_sort.c 1 2 3 4)
add_mpi_polymec_test(test_repartition_mesh test_repartition_mesh.c ../../geometry/create_uniform_mesh.c ../../geometry/create_rectilinear_mesh.c ../../geometry/cubic_lattice.c 1 2 3 4)
add_mpi_polymec_test(test_repartition_point_cloud test_repartition_point_cloud.c 1 2 3 4)
add_mpi_polymec_test(test_krylov_solver test_krylov_solver.c 1 2)

# Simple driver test with Lua interpreter.
include(add_polymec_executable)
add_polymec_executable(test_driver test_driver.c)
function(add_driver_tests)
  # Generate inputs.
  if (NOT EXISTS ${CMAKE_CURRENT_BINARY_DIR}/test_driver_input)
    file(WRITE ${CMAKE_CURRENT_BINARY_DIR}/test_driver.input "p = point.new(1,2,3)\nv1 = vector.new(1,2,3)\nv2 = vector.new(4,5,6)\nprint(p);print(v1);print(2*v2);print(v2-v1)\n")
  endif()
  if (HAVE_MPI)
    foreach (arg ${ARGN})
      set(proc ${arg})

      # Run test.
      set(run_test_name test_driver_run_${proc}_procs)
      add_test(${run_test_name} ${MPIEXEC} ${MPIEXEC_NUMPROC_FLAG} ${proc} ${MPIEXEC_PREFLAGS} ${CMAKE_CURRENT_BINARY_DIR}/test_driver test_driver.input ${MPIEXEC_POSTFLAGS})
      set_tests_properties(${run_test_name} PROPERTIES FAIL_REGULAR_EXPRESSION "error")
    endforeach()
  else()
    # Run test.
    add_test(test_driver_run ${CMAKE_CURRENT_BINARY_DIR}/test_driver test_driver.input)
    set_tests_properties(test_driver_run PROPERTIES FAIL_REGULAR_EXPRESSION "error")
  endif()
endfunction()
add_driver_tests(1 2 4)

# Mark tests expected to fail as such.
foreach (failing_test ${failing_tests})
  set_tests_properties(${failing_test} PROPERTIES WILL_FAIL TRUE)
endforeach()
